@model AudioCommune2.ViewModels.AddVideoViewModel


<!DOCTYPE html>
<html>
<body>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div id="player"></div>


    <script>// 2. This code loads the IFrame Player API code asynchronously.

        var tag = document.createElement('script');
        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '390',
                width: '640',
                videoId: 'M7lc1UVf-VE',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }
        // 4. The API will call this function when the video player is ready.

        function onPlayerReady(event) {
            loadPlaylist_video_ids();;
        }

        var cued = false;
        var done = false;
        function onPlayerStateChange(event) {
            switch (event.data) {
                case (YT.PlayerState.PLAYING):
                    console.log("video playing");
                    break;
                case (YT.PlayerState.ENDED):
                    console.log("video stopped");
                    cued = true;
                    break;
                case (YT.PlayerState.PAUSED):
                    console.log("video paused");
                    break;
            }
        }

        function loadPlaylist_video_ids() {
            fetch('/NextVid/Vids')
                .then(response => (response.json()))
                .then((videoObjArr) => {
                    const newPlaylist = videoObjArr.map(vid => vid.url);


                    player.loadPlaylist({
                        'playlist': newPlaylist,
                        'listType': 'playlist',
                        'index': 0,
                        'startSeconds': 0,
                        'suggestedQuality': 'small'
                    })
                });

        }</script>
    <form asp-controller="home" asp-action="Index" method="post">
        <div class="form-group">
            
            <input class="form-control" asp-for="Url" />
            <span asp-validation-for="Url"></span>
        </div>
        <input type="submit" value="vidsubmit" />
    </form>


    <div class="container">
        <div class="row">&nbsp;</div>
        <div class="row">
            <div class="col-2">User</div>
            <div class="col-4"><input type="text" id="userInput" /></div>
        </div>
        <div class="row">
            <div class="col-2">Message</div>
            <div class="col-4"><textarea style="resize:none" type="text" id="messageInput" ></textarea></div>
        </div>
        <div class="row">&nbsp;</div>
        <div class="row">
            <div class="col-6">
                <input type="button" id="sendButton" value="Send Message" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <script>
        function GetAllMessage() {
            fetch('/NextVid/GetAllMessages')
                .then(response => (response.json()))
                .then((messageObjArr) => {
                    const allMessages = messageObjArr.map(messageUser => messageUser.user);
                    const 
    </script>
    <div class="row" id="messageArea">
        <div class="col-10">
            <ul id="messagesList">
                @foreach (var message in ViewBag.allMessages)
                {
                <li>@message.UserID says '@message.Text'</li>
                }
            </ul>
        </div>
    </div>
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/chat.js"></script>

</body>
</html>
